package com.example.controller;


import com.alibaba.csp.sentinel.annotation.SentinelResource;
import com.alibaba.csp.sentinel.slots.block.BlockException;
import com.alibaba.fastjson.JSONObject;
import com.example.entity.Borrow;
import com.example.entity.BorrowDetail;
import com.example.service.BorrowService;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.io.IOException;
import java.util.Collections;
import java.util.List;

@RestController
public class BorrowController {

    @Resource
    BorrowService borrowService;

    @RequestMapping("/borrow/{id}")
    public BorrowDetail getBorrow(@PathVariable Integer id){

        BorrowDetail borrowDetail = borrowService.getBorrowDetailByUid(id);

        return borrowDetail;
    }
    @RequestMapping("/borrow2/{id}")
//    @SentinelResource(value = "getBorrow2",blockHandler = "test3")
    public BorrowDetail getBorrow2(@PathVariable Integer id) throws InterruptedException {

//         if(1==1)throw new RuntimeException();
//        Thread.sleep(1100);
        BorrowDetail borrowDetail = borrowService.getBorrowDetailByUid(id);

        return borrowDetail;
    }
//    熔断处理
    BorrowDetail test3(@PathVariable Integer id, BlockException e){
        System.out.println(e.getClass());
        return new BorrowDetail(null, Collections.emptyList());
    }

//    异常处理
    @RequestMapping("/blocked")
    JSONObject blocked(){
        JSONObject jsonObject= new JSONObject();
        jsonObject.put("code",403);
        jsonObject.put("success",false);
        jsonObject.put("message","您的请求频率过快，请稍后重试！");
        return jsonObject;
    }

    @RequestMapping("/test")
    @SentinelResource(value = "test",fallback = "except",exceptionsToIgnore = IOException.class)
    String test(){
        throw new RuntimeException("hello world");
    }

    String except(Throwable t){
        return t.getMessage();
    }

//    热点参数限流
    @RequestMapping("/test2")
    @SentinelResource("test2")
    String test2(@RequestParam(value = "a",required = false) String a,
                 @RequestParam(value = "b",required = false) String b,
                 @RequestParam(value = "c",required = false) String c){
        return "请求成功！a: "+a+" ,b:"+b+" , c:"+c;
    }


}
